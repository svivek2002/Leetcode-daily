## Problem:
Given a list of 24-hour clock time points in "HH:MM" format, return the minimum minutes difference between any two time-points in the list.
 

Example 1:

Input: timePoints = ["23:59","00:00"]
Output: 1
Example 2:

Input: timePoints = ["00:00","23:59","00:00"]
Output: 0
 

Constraints:

2 <= timePoints.length <= 2 * 104
timePoints[i] is in the format "HH:MM".

## Solution:
class Solution {
    public int findMinDifference(List<String> timePoints) {        
        List<Integer> minutes = new ArrayList<>();
        for (String time : timePoints) {
            String[] t = time.split(":");
            int hours = Integer.parseInt(t[0]);
            int mins = Integer.parseInt(t[1]);
            minutes.add(hours * 60 + mins);
        }        
        Collections.sort(minutes);        
        int minDiff = Integer.MAX_VALUE;        
        for (int i = 1; i < minutes.size(); i++) {
            minDiff = Math.min(minDiff, minutes.get(i) - minutes.get(i - 1));
        }        
        minDiff = Math.min(minDiff, 1440 - minutes.get(minutes.size() - 1) + minutes.get(0));        
        return minDiff;
    }
}
